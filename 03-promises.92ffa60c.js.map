{"mappings":"AAAA,SAASA,cAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIPQ,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAEC,iBAOF,IALA,IAAMC,EAAaC,SAASC,KAAKN,cAAc,kBAAkBO,OAC3DC,EAAYH,SAASC,KAAKN,cAAc,iBAAiBO,OACzDE,EAASJ,SAASC,KAAKN,cAAc,mBAAmBO,OAExDG,EAAW,GACRC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/B,IAEMC,EAAUvB,cAFCsB,EAAI,EACPP,EAAaO,EAAIH,GAG/BI,EACGC,MAAK,SAAAC,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MACjBwB,SAASC,OAAOC,QAAQ,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAEvE4B,OAAM,SAAAL,G,IAAGxB,EAAQwB,EAARxB,SAAUC,EAAKuB,EAALvB,MAClBwB,SAASC,OAAOI,QAAQ,sBAAuCF,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAGzEmB,EAASW,KAAKT,E,CAGhBjB,QAAQ2B,IAAIZ,GACTG,MAAK,WACJE,SAASC,OAAOO,KAAK,yB,IAEtBJ,OAAM,WACLJ,SAASC,OAAOO,KAAK,oC","sources":["src/js/03-promises.js"],"sourcesContent":["function createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (e) {\n  e.preventDefault();\n\n  const firstDelay = parseInt(this.querySelector('[name=\"delay\"]').value);\n  const delayStep = parseInt(this.querySelector('[name=\"step\"]').value);\n  const amount = parseInt(this.querySelector('[name=\"amount\"]').value);\n\n  const promises = [];\n  for (let i = 0; i < amount; i++) {\n    const position = i + 1;\n    const delay = firstDelay + i * delayStep;\n    const promise = createPromise(position, delay);\n\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.Success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.Failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n\n    promises.push(promise);\n  }\n\n  Promise.all(promises)\n    .then(() => {\n      Notiflix.Notify.Info('All promises fulfilled');\n    })\n    .catch(() => {\n      Notiflix.Notify.Info('At least one promise was rejected');\n    });\n});\n\n\n\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => {\n//       if (shouldResolve) {\n//         resolve({ position, delay });\n//       } else {\n//         reject({ position, delay });\n//       }\n//     }, delay);\n//   });\n// }\n\n// document.querySelector('.form').addEventListener('submit', function (e) {\n//   e.preventDefault();\n\n//   const firstDelay = parseInt(this.querySelector('[name=\"delay\"]').value);\n//   const delayStep = parseInt(this.querySelector('[name=\"step\"]').value);\n//   const amount = parseInt(this.querySelector('[name=\"amount\"]').value);\n\n//   const promises = [];\n//   for (let i = 0; i < amount; i++) {\n//     const position = i + 1;\n//     const delay = firstDelay + i * delayStep;\n//     const promise = createPromise(position, delay);\n\n//     promise\n//       .then(({ position, delay }) => {\n//         console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//       })\n//       .catch(({ position, delay }) => {\n//         console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//       });\n\n//     promises.push(promise);\n//   }\n\n//   Promise.all(promises);\n// });\n\n\n\n\n\n\n\n\n\n\n"],"names":["createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","firstDelay","parseInt","this","value","delayStep","amount","promises","i","promise","then","param","Notiflix","Notify","Success","concat","catch","Failure","push","all","Info"],"version":3,"file":"03-promises.92ffa60c.js.map"}